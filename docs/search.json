[{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://roneyfraga.com/birddog/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Roney Fraga Souza  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. caiporar Copyright (C) 2020 Roney Fraga Souza This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to birddog","text":"birddog helps detect emergence trace trajectories scientific literature patents. reads datasets OpenAlex Web Science (WoS), builds citation-based networks, identifies groups, summarizes dynamics. stable release planned CRAN. development version available GitHub: https://github.com/roneyfraga/birddog.","code":""},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to birddog","text":"","code":"# install.packages(\"remotes\") # remotes::install_github(\"roneyfraga/birddog\")  library(birddog)"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data sources","title":"Introduction to birddog","text":"OpenAlex: browser search CSV export, API via openalexR. Web Science: multiple export formats (.bib, .ris, plain-text .txt, tab-delimited .txt).","code":""},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"openalex-via-api-or-csv","dir":"Articles","previous_headings":"Data sources","what":"OpenAlex via API or CSV","title":"Introduction to birddog","text":"can paste URL openalex.org prefix https://api. obtain API endpoint.","code":"# install.packages(\"openalexR\") library(openalexR)  # Example: all publications in the Journal of Evolutionary Economics url_web <- \"https://openalex.org/works?page=1&filter=primary_location.source.id:s121026525\" url_api <- \"https://api.openalex.org/works?page=1&filter=primary_location.source.id:s121026525\"  openalexR::oa_request(query_url = url_api) |>   openalexR::oa2df(entity = \"works\") |>   birddog::read_openalex(format = \"api\") ->   file  M <- birddog::read_openalex(file, format = \"api\")"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"web-of-science-wos","dir":"Articles","previous_headings":"Data sources","what":"Web of Science (WoS)","title":"Introduction to birddog","text":"WoS allows exporting several formats. birddog can read:","code":"# openalex: csv M <- birddog::read_openalex('http://roneyfraga.com/volume/keep_it/birddog-data/openalex-works-2025-05-28T23-12-11.csv', format = \"csv\")  # wos: txt-plain-text M <- birddog::read_wos('http://roneyfraga.com/volume/keep_it/birddog-data/wos-savedrecs-plain-text.txt', format = \"txt-plain-text\")  # wos: txt-tab-delimited M <- birddog::read_wos('http://roneyfraga.com/volume/keep_it/birddog-data/wos-savedrecs-tab-delimited.txt', format = \"txt-tab-delimited\")  # wos: ris M <- birddog::read_wos('http://roneyfraga.com/volume/keep_it/birddog-data/wos-savedrecs.ris', format = \"ris\")  # wos: bib M <- birddog::read_wos('http://roneyfraga.com/volume/keep_it/birddog-data/wos-savedrecs.bib', format = \"bib\", normalized_names = TRUE)"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"example-dataset","dir":"Articles","previous_headings":"","what":"Example dataset","title":"Introduction to birddog","text":"save processing time, ’ll use pre-saved WoS sample available https://roneyfraga.com/volume/keep_it/birddog-data/wos-sugarcane-m.rds. Download query 2023-09-27. Full query : https://www.webofscience.com/wos/woscc/summary/0fa06733-b4aa-4348-854d-a799cdad2c68-a711a88c/relevance/1.","code":"12,689 results from Web of Science Core Collection for:  \"sugarcane\" AND (\"straw\" OR \"bagasse\" OR \"filter cake\" OR \"press mud\" OR \"pressmud cake\" OR \"molasses\" OR \"vinasse\" OR \"dried yeast\" OR \"fusel oil\") # bibs <- fs::dir_ls('~/Sync/birddog-data/bibs-sugarcane/', glob = '*.bib$') # # tictoc::tic() # bibs |> #   purrr::map(\\(x) birddog::read_wos(x, format = \"bib\")) |> #   dplyr::bind_rows() |> #   dplyr::distinct(DI2, .keep_all = T) -> #   M # tictoc::toc() # 62 sec  url_m <- 'https://roneyfraga.com/volume/keep_it/birddog-data/wos-sugarcane-m.rds' M <- readRDS(url(url_m))  dplyr::glimpse(M) #> Rows: 11,512 #> Columns: 50 #> $ AU                         <chr> \"Hernandez-Perez, Andres Felipe and de Arru… #> $ TI                         <chr> \"Sugarcane straw as a feedstock for xylitol… #> $ SO                         <chr> \"BRAZILIAN JOURNAL OF MICROBIOLOGY\", NA, \"B… #> $ PY                         <dbl> 2016, 2016, 2013, 2008, 2012, 2022, 2020, 2… #> $ AB                         <chr> \"Sugarcane straw has become an available li… #> $ DT                         <chr> \"Article\", \"Proceedings Paper\", \"Article\", … #> $ DI                         <chr> \"10.1016/j.bjm.2016.01.019\", \"10.1016/j.pro… #> $ DI2                        <chr> \"101016JBJM201601019\", \"101016JPROENG201606… #> $ DE                         <chr> \"Sugarcane straw; Hemicellulosic hydrolyzat… #> $ ID                         <chr> \"BAGASSE HYDROLYSATE; ACETIC-ACID; FERMENTA… #> $ SC                         <chr> \"Microbiology\", \"Engineering; Materials Sci… #> $ CR                         <chr> \"Anonymous], 2019, COMP NAC AB AC SAFR; Arr… #> $ TC                         <chr> \"51\", \"75\", \"98\", \"74\", \"0\", \"2\", \"39\", \"2\"… #> $ JI                         <chr> \"Braz. J. Microbiol.\", NA, \"Bioresour. Tech… #> $ SR                         <chr> \"WOS:000376016600030\", \"WOS:000387712600117… #> $ DB                         <chr> \"wos_bib_normalized_normalized_names\", \"wos… #> $ volume                     <chr> \"47\", \"148\", \"131\", \"148\", NA, \"57\", \"25\", … #> $ number                     <chr> \"2\", NA, NA, \"1-3\", NA, \"2, SI\", \"3\", \"5\", … #> $ pages                      <chr> \"489-496\", \"839-846\", \"357-364\", \"45-58\", \"… #> $ month                      <chr> \"APR-JUN\", NA, \"MAR\", \"MAR\", NA, \"FEB\", \"FE… #> $ publisher                  <chr> \"SPRINGER\", \"ELSEVIER SCIENCE BV\", \"ELSEVIE… #> $ address                    <chr> \"233 SPRING ST, NEW YORK, NY 10013 USA\", \"S… #> $ language                   <chr> \"English\", \"English\", \"English\", \"English\",… #> $ C1                         <chr> \"Hernández-Pérez, AF (Corresponding Author)… #> $ issn                       <chr> \"1517-8382\", \"1877-7058\", \"0960-8524\", \"027… #> $ eissn                      <chr> \"1678-4405\", NA, \"1873-2976\", \"1559-0291\", … #> $ web_of_science_categories  <chr> \"Microbiology\", \"Engineering, Industrial; M… #> $ author_email               <chr> \"ahernandez@usp.br\", \"fazlena@salam.uitm.ed… #> $ affiliations               <chr> \"Universidade de Sao Paulo\", \"Universiti Te… #> $ researcher_id_numbers      <chr> \"Pérez, Andrés Felipe Hernández/AAN-5546-20… #> $ orcid_numbers              <chr> \"Pérez, Andrés Felipe Hernández/0000-0002-5… #> $ funding_acknowledgement    <chr> \"FAPESP (Fundacao do amparo a pesquisa do e… #> $ funding_text               <chr> \"This work was financially supported by the… #> $ number_of_cited_references <chr> \"39\", \"12\", \"36\", \"35\", \"13\", \"36\", \"49\", \"… #> $ usage_count_last_180_days  <chr> \"0\", \"2\", \"1\", \"1\", \"0\", \"5\", \"0\", \"3\", \"1\"… #> $ usage_count_since_2013     <chr> \"12\", \"7\", \"133\", \"40\", \"4\", \"34\", \"19\", \"9… #> $ doc_delivery_number        <chr> \"DM0EV\", \"BG2UR\", \"118KK\", \"289MD\", \"BGL38\"… #> $ web_of_science_index       <chr> \"Science Citation Index Expanded (SCI-EXPAN… #> $ oa                         <chr> \"hybrid, Green Published\", \"gold\", NA, NA, … #> $ da                         <chr> \"2023-11-14\", \"2023-11-14\", \"2023-11-14\", \"… #> $ editor                     <chr> NA, \"Bustam, MA and Man, Z and Keong, LK an… #> $ booktitle                  <chr> NA, \"PROCEEDING OF 4TH INTERNATIONAL CONFER… #> $ series                     <chr> NA, \"Procedia Engineering\", NA, NA, NA, NA,… #> $ note                       <chr> NA, \"4th International Conference on Proces… #> $ isbn                       <chr> NA, NA, NA, NA, \"978-7-5019-9043-6\", NA, NA… #> $ early_access_date          <chr> NA, NA, NA, NA, NA, \"DEC 2021\", NA, NA, \"AU… #> $ article_number             <chr> NA, NA, NA, NA, NA, NA, \"623\", \"PII S174217… #> $ book_group_author          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ book_author                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ meeting                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"build-a-citation-network","dir":"Articles","previous_headings":"","what":"Build a citation network","title":"Introduction to birddog","text":"can build either direct citation network use bibliographic coupling. Direct citation highlights time-ordered influence; bibliographic coupling captures proximity topics via shared references.","code":"# Direct citation # net <- birddog::sniff_network(M, type = \"direct citation\")  # Bibliographic coupling net <- birddog::sniff_network(M, type = \"bibliographic coupling\")  net |>   tidygraph::activate(nodes) |>   dplyr::select(name, AU, PY, TI, TC) |>   dplyr::arrange(dplyr::desc(TC)) #> # A tbl_graph: 11416 nodes and 2659060 edges #> # #> # An undirected simple graph with 115 components #> # #> # Node Data: 11,416 × 5 (active) #>    name                       AU                                  PY TI    TC    #>    <chr>                      <chr>                            <dbl> <chr> <chr> #>  1 101016JAPENERGY201809135   Chen, Wei-Hsin and Lin, Bo-Jhih…  2018 Hygr… 99    #>  2 101016JBEJ200602009        Rahman, S. H. A. and Choudhury,…  2006 Prod… 99    #>  3 101016JBIOMBIOE201606017   Zhu, Zongyuan and Rezende, Cami…  2016 Effi… 99    #>  4 101016JCARBPOL201407052    Szczerbowski, Danielle and Pita…  2014 Suga… 99    #>  5 101016JCARBPOL201607071    Candido, R. G. and Goncalves, A…  2016 Synt… 99    #>  6 101016JCARBPOL201808081    Harini, K. and Ramya, K. and Su…  2018 Extr… 99    #>  7 101016JPBIOMOLBIO201807011 Meili, L. and Lins, P. V. S. an…  2019 Adso… 99    #>  8 101016JRSER201405036       Rocha, Mateus Henrique and Capa…  2014 Life… 99    #>  9 101016S0032959200001503    Patil, YB and Paknikar, KM        2000 Deve… 99    #> 10 101021IE401286Z            Subhedar, Preeti B. and Gogate,…  2013 Inte… 99    #> # ℹ 11,406 more rows #> # #> # Edge Data: 2,659,060 × 3 #>    from    to weight #>   <int> <int>  <dbl> #> 1  2387  6371      1 #> 2   588  2387      1 #> 3  2387  5633      1 #> # ℹ 2,659,057 more rows"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"components","dir":"Articles","previous_headings":"","what":"Components","title":"Introduction to birddog","text":"analysis components important eliminate disconnected documents share bibliographic references. However, one component high number documents exists, may indicate presence two disconnected scientific literatures.","code":"comps <- birddog::sniff_components(net)  names(comps) #> [1] \"components\" \"network\"  comps$components |>   dplyr::slice_head(n = 5) |>   gt::gt()"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"groups-community-detection","dir":"Articles","previous_headings":"","what":"Groups (community detection)","title":"Introduction to birddog","text":"","code":"birddog::sniff_groups(   comps,   algorithm = 'fast_greedy',   min_group_size = 30,   groups_short_name = TRUE) ->   groups  names(groups) #> [1] \"aggregate\"    \"network\"      \"pubs_by_year\"  groups$aggregate |>   gt::gt()"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"group-attributes","dir":"Articles","previous_headings":"Groups (community detection)","what":"Group attributes","title":"Introduction to birddog","text":"helps understand structure groups.","code":"birddog::sniff_groups_attributes(   groups,   growth_rate_period = 2010:2022,   show_results = FALSE) ->   groups_attributes  names(groups_attributes) #> [1] \"attributes_table\" \"regression\"  groups_attributes$attributes_table"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"group-content-keywords","dir":"Articles","previous_headings":"Groups (community detection)","what":"Group content: keywords","title":"Introduction to birddog","text":"contributes understanding content group.","code":"groups_keywords <- birddog::sniff_groups_keywords(groups)  groups_keywords |>   DT::datatable(     rownames = FALSE,     filter = 'bottom',     extensions = 'Buttons',     escape = FALSE,     options = list(dom = 'Blfrtip', pageLength = 5)   )"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"group-content-nlp","dir":"Articles","previous_headings":"Groups (community detection)","what":"Group content: NLP","title":"Introduction to birddog","text":"step can time-consuming. Consider precomputing saving results.","code":"# tictoc::tic() # groups_terms <- sniff_groups_terms(groups, algorithm = 'phrase') # tictoc::toc() # 34 min  groups_terms <- readRDS('~/Sync/birddog-data/wos-sugarcane-groups-terms.rds')  names(groups_terms) #> [1] \"terms_by_group\" \"terms_table\"  groups_terms$terms_table |>   DT::datatable(     rownames = FALSE,     filter = 'bottom',     extensions = 'Buttons',     escape = FALSE,     options = list(dom = 'Blfrtip', pageLength = 5)   )"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"prestige-hubs","dir":"Articles","previous_headings":"Groups (community detection)","what":"Prestige: hubs","title":"Introduction to birddog","text":"calculation slow. patient.","code":"# tictoc::tic() # groups_hubs <- sniff_groups_hubs(groups) # tictoc::toc() # 19 min  groups_hubs <- readRDS('~/Sync/birddog-data/wos-sugarcane-groups-hubs.rds')  groups_hubs |>   dplyr::filter(zone != 'noHub') |>   dplyr::left_join(groups$network |> tidygraph::activate(nodes) |> tibble::as_tibble() |> dplyr::select(SR, PY), by = 'SR') |>   dplyr::mutate(Zi = round(Zi, digits = 2), Pi = round(Pi, digits = 2)) |>   dplyr::mutate(SR = paste0('<a href=\"https://www.webofscience.com/wos/alldb/full-record/', SR, '\">', SR, '<\/a>')) |>   DT::datatable(     rownames = FALSE,     filter = 'bottom',     extensions = 'Buttons',     escape = FALSE,     options = list(dom = 'Blfrtip', pageLength = 10)   )"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"group-evolution-trajectories","dir":"Articles","previous_headings":"Groups (community detection)","what":"Group evolution (trajectories)","title":"Introduction to birddog","text":"","code":"# tictoc::tic() # groups_cumulative <- sniff_groups_cumulative(groups) # tictoc::toc() # 2 min  groups_cumulative <- readRDS('~/Sync/birddog-data/wos-sugarcane-groups-cumulative.rds')  suppressMessages({   groups_cumulative_trajectories <- birddog::sniff_groups_trajectories(groups_cumulative) })  plot_group_trajectories_2d(   groups_cumulative_trajectories,   group = 'component1_g03',   label_vertical_position = -2 ) plot_group_trajectories_3d(   groups_cumulative_trajectories,   group = 'component1_g03' )"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"citation-growth-per-document","dir":"Articles","previous_headings":"Groups (community detection)","what":"Citation growth per document","title":"Introduction to birddog","text":"","code":"# tictoc::tic() # groups_cumulative_citations <- sniff_groups_cumulative_citations(groups, min_citations = 2) # tictoc::toc() # 11 min  groups_cumulative_citations <- readRDS('~/Sync/birddog-data/wos-sugarcane-groups-cumulative-citations.rds')  # First, create the data frame groups_cumulative_citations |>   purrr::map(\\(x)     x |>       dplyr::select(- citations_by_year) |>       dplyr::arrange(dplyr::desc(growth_power)) |>       dplyr::slice_head(n = 50)) |>   dplyr::bind_rows() |>   dplyr::mutate(SR = paste0('<a href=\"https://www.webofscience.com/wos/alldb/full-record/', SR, '\">', SR, '<\/a>')) ->   df  n_cols <- ncol(df) hidden_cols <- 7:(n_cols - 1)  # Hide columns 8 to second-to-last  # Create the datatable DT::datatable(df, rownames = FALSE, filter = 'bottom', extensions = c('Buttons', 'ColReorder'), escape = FALSE,   options = list(     dom = 'Blfrtip',     pageLength = 10,     columnDefs = list(       list(visible = FALSE, targets = hidden_cols),       list(className = 'dt-center', targets = '_all')     ),     buttons = list( list( extend = 'colvis', text = 'Show/Hide Columns', columns = hidden_cols))   ))"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"topic-modeling-stm","dir":"Articles","previous_headings":"Groups (community detection)","what":"Topic modeling (STM)","title":"Introduction to birddog","text":"Detect topics within group Structural Topic Modeling. , create topics (sub-groups) based linguistic similarities.","code":"# g01  # tictoc::tic() # groups_stm_prepare_g01 <- sniff_groups_stm_prepare(groups, group_to_stm = 'g01') # tictoc::toc() # 21 min  groups_stm_prepare <- readRDS('~/Sync/birddog-data/wos-sugarcane-groups-stm-prepare-g01.rds') names(groups_stm_prepare) #> [1] \"result\"     \"plots\"      \"data\"       \"parameters\"  groups_stm_prepare$plots #> $metrics_by_k #>  #> $exclusivity_vs_coherence # tictoc::tic() # groups_stm_run <- sniff_groups_stm_run(groups_stm_prepare, k_topics = 18, n_top_documents = 20) # tictoc::toc() # 35 sec  groups_stm_run <- readRDS('~/Sync/birddog-data/wos-sugarcane-groups-stm-run-g01.rds')  groups_stm_run$topic_proportion |>   dplyr::mutate(topic_proportion = round(topic_proportion, 3)) |>   DT::datatable(     caption = 'g01',     rownames = FALSE,     filter = 'bottom',     extensions = 'Buttons',     escape = FALSE,     options = list(dom = 'Blfrtip', pageLength = 10)   ) groups_stm_run$top_documents |>   dplyr::left_join(M |> dplyr::select(document = DI2, SR), by = dplyr::join_by(document)) |>   dplyr::mutate(SR = paste0('<a href=\"https://www.webofscience.com/wos/alldb/full-record/', SR, '\">', SR, '<\/a>')) |>   dplyr::select(SR, topic, gamma, title) |>   DT::datatable(     caption = 'g01',     rownames = FALSE,     filter = 'bottom',     extensions = 'Buttons',     escape = FALSE,     options = list(dom = 'Blfrtip', pageLength = 10)   )"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"indexes-citatations-cycle-time","dir":"Articles","previous_headings":"","what":"Indexes: Citatations Cycle Time","title":"Introduction to birddog","text":"network. Groups.","code":"# tictoc::tic() # net_cct <- sniff_citations_cycle_time(net, scope = 'network', start_year = 1990, end_year = 2024) # tictoc::toc() # 1.3 min  net_cct <- readRDS('~/Sync/birddog-data/wos-sugarcane-net-cct.rds')  # names(net_cct) net_cct$plots[['full_network']] tictoc::tic() groups_cct <- sniff_citations_cycle_time(groups, scope = 'groups', start_year = 1990, end_year = 2024) tictoc::toc() # 1.4 min"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"indexes-entropy","dir":"Articles","previous_headings":"","what":"Indexes: Entropy","title":"Introduction to birddog","text":"network. Groups.","code":"tictoc::tic() net_entropy <- sniff_entropy(net, scope = 'network', start_year = 1990, end_year = 2024) tictoc::toc() # 5.7 sec tictoc::tic() groups_entropy <- sniff_entropy(groups, scope = 'groups', start_year = 1990, end_year = 2024) tictoc::toc() #> 8.331 sec elapsed # 7.7 sec  groups_entropy$plots[['g02']]"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"main-path-analysis","dir":"Articles","previous_headings":"","what":"Main Path Analysis","title":"Introduction to birddog","text":"Key Route Algorithm. network.  Groups.","code":"net_dc <- sniff_network(M, type = \"direct citation\")  igraph::V(net_dc)$deg <- igraph::degree(net_dc)  net_dc |>   tidygraph::activate(nodes) |>   dplyr::filter(deg >= 50) ->   net_dc_topn  net_key_route <- sniff_key_route(net_dc_topn, scope = 'network')  net_key_route[['full_network']]$plot net_key_route[['full_network']]$data |>   dplyr::select(- name) |>   DT::datatable(     rownames = FALSE,     filter = 'bottom',     extensions = 'Buttons',     escape = FALSE,     options = list(dom = 'Blfrtip', pageLength = 5)   ) comps_dc <- birddog::sniff_components(net_dc) groups_dc <- birddog::sniff_groups(comps_dc, algorithm = 'fast_greedy', min_group_size = 30, groups_short_name = TRUE)  groups_key_route <- sniff_key_route(groups_dc, scope = 'groups')"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to birddog","text":"","code":"sessioninfo::session_info()$platform |>   unlist() |>   as.data.frame() |>   tibble::rownames_to_column() |>   setNames(c(\"Setting\", \"Value\")) |>   gt::gt()"},{"path":"https://roneyfraga.com/birddog/articles/introduction_birddog.html","id":"hardware","dir":"Articles","previous_headings":"","what":"Hardware","title":"Introduction to birddog","text":"Hostname: rambo Processor: AMD Ryzen 9 7950X 16-Core Processor. RAM: 124.9 Gigabit. Storage: 2 SSD’s raid0 data 1 SSD OS.","code":""},{"path":"https://roneyfraga.com/birddog/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Roney Fraga Souza. Author, maintainer. Luis Felipe de Souza Rodrigues. Contributor.","code":""},{"path":"https://roneyfraga.com/birddog/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Souza RF (2025). birddog: Sniffing Emergence Trajectories Academic Papers Patents. R package version 0.0.1.0000, https://github.com/roneyfraga/birddog, https://roneyfraga.com/birddog.","code":"@Manual{,   title = {birddog: Sniffing Emergence and Trajectories in Academic Papers and Patents},   author = {Roney Fraga Souza},   year = {2025},   note = {R package version 0.0.1.0000, https://github.com/roneyfraga/birddog},   url = {https://roneyfraga.com/birddog}, }"},{"path":"https://roneyfraga.com/birddog/index.html","id":"birddog-","dir":"","previous_headings":"","what":"Sniffing Emergence and Trajectories in Academic Papers and Patents","title":"Sniffing Emergence and Trajectories in Academic Papers and Patents","text":"goal birddog sniffing emergence trajectories scientific patent literature.","code":""},{"path":"https://roneyfraga.com/birddog/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sniffing Emergence and Trajectories in Academic Papers and Patents","text":"can install development version birddog GitHub :","code":"# install.packages(\"devtools\") library(devtools)  # install and load getLattes devtools::install_github(\"roneyfraga/birddog\") library(birddog)"},{"path":"https://roneyfraga.com/birddog/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Sniffing Emergence and Trajectories in Academic Papers and Patents","text":"vignettes available online : http://roneyfraga.com/birddog/articles/introduction_birddog.html","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/index.html","id":"main-publications","dir":"","previous_headings":"","what":"Main publications","title":"Sniffing Emergence and Trajectories in Academic Papers and Patents","text":"Miranda et al. (2025) Landscape Green Biohydrogen Technology: Data-Driven Exploration Using Non-Supervised Methods Felizardo et al. (2025) Transforming Wastes Resources: Innovations Cotton Biorefineries Sustainable Future Biazatti et al. (2024) Soybean biorefinery technological forecasts based bibliometric analysis network mapping Maria et al. (2023) Evolution Green Finance: Bibliometric Analysis Complex Networks Machine Learning Matos et al. (2023) Building evaluating prospective scenarios corn-based biorefineries Souza et al. (2022) entrepreneurship emerging area research? computational response Souza et al. (2022) Bioenergy research Brazil: bibliometric evaluation BIOEN Research Program","code":""},{"path":"https://roneyfraga.com/birddog/reference/bib_splited_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize column names across formats — bib_splited_to_tibble","title":"Normalize column names across formats — bib_splited_to_tibble","text":"Normalize column names across formats","code":""},{"path":"https://roneyfraga.com/birddog/reference/bib_splited_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize column names across formats — bib_splited_to_tibble","text":"","code":"bib_splited_to_tibble(bib_splited_by_field)"},{"path":"https://roneyfraga.com/birddog/reference/birddog-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birddog: sniffing emergence and trajectories in academic papers and patents — birddog-package","title":"birddog: sniffing emergence and trajectories in academic papers and patents — birddog-package","text":"Tools detect emergence trace technological/scientific trajectories papers patents. reads OpenAlex Web Science data, builds citation-based networks, identifies groups, summarizes dynamics.","code":""},{"path":"https://roneyfraga.com/birddog/reference/birddog-package.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"birddog: sniffing emergence and trajectories in academic papers and patents — birddog-package","text":"Website: https://roneyfraga.com/birddog GitHub: https://github.com/roneyfraga/birddog Issues: https://github.com/roneyfraga/birddog/issues","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/reference/birddog-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birddog: sniffing emergence and trajectories in academic papers and patents — birddog-package","text":"Maintainer: Roney Fraga Souza roneyfraga@gmail.com (ORCID) contributors: Luis Felipe de Souza Rodrigues lfsouza25@gmail.com [contributor]","code":""},{"path":"https://roneyfraga.com/birddog/reference/calculate_growth_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Growth Metrics for Citation Data — calculate_growth_power","title":"Calculate Growth Metrics for Citation Data — calculate_growth_power","text":"Internal function calculate various growth metrics citation data.","code":""},{"path":"https://roneyfraga.com/birddog/reference/calculate_growth_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Growth Metrics for Citation Data — calculate_growth_power","text":"","code":"calculate_growth_power(citations_year_df, publications_year)"},{"path":"https://roneyfraga.com/birddog/reference/calculate_growth_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Growth Metrics for Citation Data — calculate_growth_power","text":"citations_year_df Data frame citation data year publications_year Publication year paper","code":""},{"path":"https://roneyfraga.com/birddog/reference/calculate_growth_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Growth Metrics for Citation Data — calculate_growth_power","text":"tibble growth metrics","code":""},{"path":"https://roneyfraga.com/birddog/reference/cgn.html","id":null,"dir":"Reference","previous_headings":"","what":"Short names to groups — cgn","title":"Short names to groups — cgn","text":"Short names groups","code":""},{"path":"https://roneyfraga.com/birddog/reference/cgn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Short names to groups — cgn","text":"","code":"cgn(x)"},{"path":"https://roneyfraga.com/birddog/reference/fetch_publication_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Publication Years for OpenAlex IDs — fetch_publication_years","title":"Fetch Publication Years for OpenAlex IDs — fetch_publication_years","text":"Internal function retrieve publication years OpenAlex work IDs using OpenAlex API. Processes data batches avoid API rate limits.","code":""},{"path":"https://roneyfraga.com/birddog/reference/fetch_publication_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Publication Years for OpenAlex IDs — fetch_publication_years","text":"","code":"fetch_publication_years(oa_data, batch_size = 100)"},{"path":"https://roneyfraga.com/birddog/reference/fetch_publication_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Publication Years for OpenAlex IDs — fetch_publication_years","text":"oa_data tibble containing OpenAlex IDs column named \"CR\" batch_size Number IDs process per API call (default: 100)","code":""},{"path":"https://roneyfraga.com/birddog/reference/fetch_publication_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Publication Years for OpenAlex IDs — fetch_publication_years","text":"tibble added CR_PY column containing publication years","code":""},{"path":"https://roneyfraga.com/birddog/reference/indexes_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create CCT or Entropy Visualization Plots — indexes_plots","title":"Create CCT or Entropy Visualization Plots — indexes_plots","text":"Create CCT Entropy Visualization Plots","code":""},{"path":"https://roneyfraga.com/birddog/reference/indexes_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create CCT or Entropy Visualization Plots — indexes_plots","text":"","code":"indexes_plots(data, group_name, start_year, end_year, method = \"cct\")"},{"path":"https://roneyfraga.com/birddog/reference/indexes_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create CCT or Entropy Visualization Plots — indexes_plots","text":"data Data calculate_cct calculate_entropy function group_name Specific group visualize start_year Starting year x-axis end_year Ending year x-axis method Character string indicating method: \"cct\" \"entropy\"","code":""},{"path":"https://roneyfraga.com/birddog/reference/indexes_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create CCT or Entropy Visualization Plots — indexes_plots","text":"plotly object combined plots","code":""},{"path":"https://roneyfraga.com/birddog/reference/jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Jaccard Similarity Between Two Vectors — jaccard","title":"Calculate Jaccard Similarity Between Two Vectors — jaccard","text":"Calculate Jaccard Similarity Two Vectors","code":""},{"path":"https://roneyfraga.com/birddog/reference/jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Jaccard Similarity Between Two Vectors — jaccard","text":"","code":"jaccard(a, b)"},{"path":"https://roneyfraga.com/birddog/reference/jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Jaccard Similarity Between Two Vectors — jaccard","text":"First vector b Second vector","code":""},{"path":"https://roneyfraga.com/birddog/reference/jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Jaccard Similarity Between Two Vectors — jaccard","text":"Jaccard similarity coefficient (0 1)","code":""},{"path":"https://roneyfraga.com/birddog/reference/load_udpipe_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load UDPipe model with on-demand downloading — load_udpipe_model","title":"Load UDPipe model with on-demand downloading — load_udpipe_model","text":"Load UDPipe model -demand downloading","code":""},{"path":"https://roneyfraga.com/birddog/reference/load_udpipe_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load UDPipe model with on-demand downloading — load_udpipe_model","text":"","code":"load_udpipe_model(model_name = \"english\", model_dir = \".\")"},{"path":"https://roneyfraga.com/birddog/reference/load_udpipe_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load UDPipe model with on-demand downloading — load_udpipe_model","text":"model_name Name model load (default: \"english\") model_dir Directory models stored (default: current directory)","code":""},{"path":"https://roneyfraga.com/birddog/reference/load_udpipe_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load UDPipe model with on-demand downloading — load_udpipe_model","text":"UDPipe model object","code":""},{"path":"https://roneyfraga.com/birddog/reference/normalize_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize column names across formats — normalize_column_names","title":"Normalize column names across formats — normalize_column_names","text":"Normalize column names across formats","code":""},{"path":"https://roneyfraga.com/birddog/reference/normalize_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize column names across formats — normalize_column_names","text":"","code":"normalize_column_names(data, format)"},{"path":"https://roneyfraga.com/birddog/reference/parse_plain_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse individual plain text record — parse_plain_record","title":"Parse individual plain text record — parse_plain_record","text":"Parse individual plain text record","code":""},{"path":"https://roneyfraga.com/birddog/reference/parse_plain_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse individual plain text record — parse_plain_record","text":"","code":"parse_plain_record(lines)"},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize 2D Technological Trajectories from Group Evolution — plot_group_trajectories_2d","title":"Visualize 2D Technological Trajectories from Group Evolution — plot_group_trajectories_2d","text":"Creates 2D visualization technological trajectories based group similarity metrics, showing evolution research groups time node size representing group importance color representing publication-year deviation.","code":""},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize 2D Technological Trajectories from Group Evolution — plot_group_trajectories_2d","text":"","code":"plot_group_trajectories_2d(   groups_cumulative_trajectories,   group = \"component1_g01\",   jaccard_similarity = 0.1,   prop_tracked_intra_group_treshold = 0.2,   label_type = \"size\",   label_vertical_position = 0,   label_horizontal_position = 0,   label_angle = 0,   time_span = NA,   show_legend = TRUE )"},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize 2D Technological Trajectories from Group Evolution — plot_group_trajectories_2d","text":"groups_cumulative_trajectories list components groups_similarity groups_attributes, typically produced plot_groups_trajectories(). groups_similarity element must named list edge tables (one per group) least , , weight; groups_attributes element must named list node tables containing, among others, network_until, quantity_papers, prop_tracked_intra_group, tracked_documents, PY.sd. group specific group visualize (default: \"component1_g01\"). jaccard_similarity Minimum Jaccard similarity threshold connections (default: 0.1). prop_tracked_intra_group_treshold Minimum proportion tracked intra-group documents nodes included (default: 0.2). label_type Type labels display nodes (\"size\" weighted size \"id\" group IDs). label_vertical_position Vertical adjustment node labels (default: 0). label_horizontal_position Horizontal adjustment node labels (default: 0). label_angle Angle node labels (default: 0). time_span Optional vector years display; NA, shows (default: NA). show_legend Logical indicating whether show color legend (default: TRUE).","code":""},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize 2D Technological Trajectories from Group Evolution — plot_group_trajectories_2d","text":"ggplot2 object visualizing technological trajectories.","code":""},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize 2D Technological Trajectories from Group Evolution — plot_group_trajectories_2d","text":"","code":"if (FALSE) { # \\dontrun{ # Compute trajectories first traj_data <- plot_groups_trajectories(groups_cumulative)  # Visualize a specific group (pass the whole object; the function extracts what it needs internally) plot_group_trajectories_2d(   groups_cumulative_trajectories = traj_data,   group = \"component1_g05\",   jaccard_similarity = 0.3 ) } # }"},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize 3D Technological Trajectories from Group Evolution — plot_group_trajectories_3d","title":"Visualize 3D Technological Trajectories from Group Evolution — plot_group_trajectories_3d","text":"Creates interactive 3D visualization technological trajectories showing evolution research groups time node size representing group importance color representing publication year deviation.","code":""},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize 3D Technological Trajectories from Group Evolution — plot_group_trajectories_3d","text":"","code":"plot_group_trajectories_3d(   groups_cumulative_trajectories,   group = \"component1_g01\",   jaccard_similarity = 0.1,   prop_tracked_intra_group_treshold = 0.2,   label_type = \"size\",   label_vertical_position = 0,   label_horizontal_position = 0,   label_angle = 0,   time_span = NA,   show_legend = TRUE,   last_year_keywords = NULL )"},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize 3D Technological Trajectories from Group Evolution — plot_group_trajectories_3d","text":"groups_cumulative_trajectories list containing two components: groups_similarity: Similarity data groups groups_attributes: Attribute data group group specific group visualize (default: \"component1_g01\") jaccard_similarity Minimum Jaccard similarity threshold connections (default: 0.1) prop_tracked_intra_group_treshold Minimum proportion tracked intra-group documents nodes included (default: 0.2) label_type Type labels display nodes (\"size\" weighted size \"id\" group IDs) label_vertical_position Vertical adjustment node labels (default: 0) label_horizontal_position Horizontal adjustment node labels (default: 0) label_angle Angle node labels (default: 0) time_span Optional vector specifying time span display (default: NA shows years) show_legend Logical indicating whether show color legend (default: TRUE) last_year_keywords Optional keywords description last year (default: NULL)","code":""},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize 3D Technological Trajectories from Group Evolution — plot_group_trajectories_3d","text":"plotly 3D visualization object","code":""},{"path":"https://roneyfraga.com/birddog/reference/plot_group_trajectories_3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize 3D Technological Trajectories from Group Evolution — plot_group_trajectories_3d","text":"","code":"if (FALSE) { # \\dontrun{ # First get trajectory data traj_data <- sniff_groups_trajectories(groups_cumulative)  # Visualize a specific group in 3D plot_group_trajectory_3d(   groups_cumulative_trajectories = traj_data,   group = \"component1_g05\",   jaccard_similarity = 0.2 ) } # }"},{"path":"https://roneyfraga.com/birddog/reference/read_lines_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Read lines from single or multiple files — read_lines_multiple","title":"Read lines from single or multiple files — read_lines_multiple","text":"Read lines single multiple files","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_lines_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read lines from single or multiple files — read_lines_multiple","text":"","code":"read_lines_multiple(file)"},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Process OpenAlex data — read_openalex","title":"Read and Process OpenAlex data — read_openalex","text":"Parse datasets exported OpenAlex two ways: (1) CSV file exported browser, (2) data frame obtained via {openalexR} API helpers. function standardizes fields common bibliographic tags (e.g., AU, , CR, PY, DI) returns tidy tibble.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Process OpenAlex data — read_openalex","text":"","code":"read_openalex(file, format = \"csv\")"},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Process OpenAlex data — read_openalex","text":"file format = \"csv\", character string local path HTTP(S) URL CSV export. format = \"api\", data frame produced {openalexR} works entity. format Either \"csv\" (CSV export) \"api\" (data frame {openalexR}).","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Process OpenAlex data — read_openalex","text":"tibble standardized bibliographic columns. Typical output includes: id_short, AU, DI, CR, , DT, DE, AB, C1, TC, SC, SR, PY, DB (source flag: \"openalex_csv\" \"openalex_api\"). See Details.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and Process OpenAlex data — read_openalex","text":"CSV mode (format = \"csv\"): file URL, downloaded temporary file parsing (progress message printed). Selected fields mapped standardized tags: id_short (short OpenAlex ID), SR (= id_short), PY (= publication_year), TI (= title), DI (= doi), DT (= type), DE (= keywords.display_name), AB (= abstract), AU (= authorships.author.display_name), (= locations.source.display_name), C1 (= authorships.countries), TC (= cited_by_count), SC (= primary_topic.field.display_name), CR (= referenced_works, https://openalex.org/ prefix stripped), DB = \"openalex_csv\". PY coerced numeric; helper column DI2 (uppercase, punctuation-stripped variant DI) added; columns -caps tags placed first DI2 relocated DI. API mode (format = \"api\"): file must data frame containing least column id; typically returned openalexR::oa_request() + openalexR::oa2df() similar. Records filtered type %% c(\"article\",\"review\") deduplicated id. function derives: id_short (= id without https://openalex.org/ prefix) SR (= id_short); CR: concatenated short IDs referenced_works (semicolon-separated); DE: concatenated keyword names (lower case) keywords; AU: concatenated author names (upper case) authorships; plus core fields PY (= publication_year), TC (= cited_by_count), TI (= title), AB (= abstract), DI (= doi), DB = \"openalex_api\". result keeps one row per id may include original columns input (via right join), constructing standardized fields .","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":"supported-inputs","dir":"Reference","previous_headings":"","what":"Supported inputs","title":"Read and Process OpenAlex data — read_openalex","text":"format = \"csv\" — local path HTTP(S) URL OpenAlex CSV export. format = \"api\" — data frame produced {openalexR} works entity (usual OpenAlex columns, including list-columns keywords, authorships, referenced_works).","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/reference/read_openalex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and Process OpenAlex data — read_openalex","text":"","code":"if (FALSE) { # \\dontrun{ ## CSV export (local path) x <- read_openalex(\"~/Downloads/openalex-works.csv\", format = \"csv\")  ## CSV export (URL) x <- read_openalex(\"http://yoursite/openalex-works-2025-05-28T23-12-11.csv\", format = \"csv\")  ## Using the API with openalexR # install.packages(\"openalexR\") library(openalexR) url_api <- \"https://api.openalex.org/works?page=1&filter=primary_location.source.id:s121026525\" df_api  <- openalexR::oa_request(query_url = url_api) |>   openalexR::oa2df(entity = \"works\") y <- read_openalex(df_api, format = \"api\")  } # }"},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Web of Science exported files — read_wos","title":"Read Web of Science exported files — read_wos","text":"Parse Web Science (WoS) export files multiple formats return tidy table. function automatically dispatches specialized parser based format argument can also download URL file points http:// https:// resource.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Web of Science exported files — read_wos","text":"","code":"read_wos(file, format = \"bib\", normalized_names = TRUE)"},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Web of Science exported files — read_wos","text":"file Character scalar vector. Path(s) WoS export file, single URL (http:// https://) pointing WoS export. format Character scalar. Export format; one \"bib\", \"ris\", \"txt-plain-text\", \"txt-tab-delimited\". normalized_names Logical. TRUE (default), use standardized column names possible; FALSE, keep original WoS field tags.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Web of Science exported files — read_wos","text":"tibble parsed WoS records. See Details notes added/coerced columns (DI2, PY, DB) column ordering.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Web of Science exported files — read_wos","text":"file may single path/URL vector paths; multiple files combined row-wise applicable. file URL, file downloaded temporary path parsing (progress message printed). normalized_names = TRUE, selected WoS tags mapped standardized names (e.g., AU → author, TI → title, PY → year, DI → doi, DE → keywords, SR → unique_id, etc.; exact mapping depends format). Otherwise, original field tags preserved. output includes: DI2: uppercase, punctuation-stripped variant DI (present), PY: coerced numeric (present), DB: provenance flag indicating source/format whether names normalized. Columns -CAPS tags (e.g., AU, TI, PY) placed first, followed columns, DI2 relocated just DI.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":"supported-formats","dir":"Reference","previous_headings":"","what":"Supported formats","title":"Read Web of Science exported files — read_wos","text":"\"bib\" — BibTeX export \"ris\" — RIS export \"txt-plain-text\" — Plain-text export \"txt-tab-delimited\" — Tab-delimited export","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/reference/read_wos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Web of Science exported files — read_wos","text":"","code":"if (FALSE) { # \\dontrun{  # load data from websites # M <- birddog::read_wos('http://yoursite/wos-savedrecs-plain-text.txt', format = \"txt-plain-text\")   # load from local files   M <- read_wos('~/Downloads/savedrecs.bib', format = \"bib\", normalized_names = TRUE)  } # }"},{"path":"https://roneyfraga.com/birddog/reference/read_wos_bib.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Web of Science BibTeX files — read_wos_bib","title":"Read Web of Science BibTeX files — read_wos_bib","text":"Read Web Science BibTeX files","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_bib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Web of Science BibTeX files — read_wos_bib","text":"","code":"read_wos_bib(file, normalized_names = TRUE)"},{"path":"https://roneyfraga.com/birddog/reference/read_wos_bib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Web of Science BibTeX files — read_wos_bib","text":"file Character scalar vector. Path(s) WoS export file, single URL (http:// https://) pointing WoS export. normalized_names Logical. TRUE (default), use standardized column names possible; FALSE, keep original WoS field tags.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_plain.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Web of Science plain text files — read_wos_plain","title":"Read Web of Science plain text files — read_wos_plain","text":"Read Web Science plain text files","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_plain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Web of Science plain text files — read_wos_plain","text":"","code":"read_wos_plain(file, normalized_names = TRUE)"},{"path":"https://roneyfraga.com/birddog/reference/read_wos_plain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Web of Science plain text files — read_wos_plain","text":"file Character scalar vector. Path(s) WoS export file, single URL (http:// https://) pointing WoS export. normalized_names Logical. TRUE (default), use standardized column names possible; FALSE, keep original WoS field tags.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_ris.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Web of Science RIS files — read_wos_ris","title":"Read Web of Science RIS files — read_wos_ris","text":"Read Web Science RIS files","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_ris.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Web of Science RIS files — read_wos_ris","text":"","code":"read_wos_ris(file, normalized_names = TRUE)"},{"path":"https://roneyfraga.com/birddog/reference/read_wos_ris.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Web of Science RIS files — read_wos_ris","text":"file Character scalar vector. Path(s) WoS export file, single URL (http:// https://) pointing WoS export. normalized_names Logical. TRUE (default), use standardized column names possible; FALSE, keep original WoS field tags.","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Web of Science tab-delimited files — read_wos_tab","title":"Read Web of Science tab-delimited files — read_wos_tab","text":"Read Web Science tab-delimited files","code":""},{"path":"https://roneyfraga.com/birddog/reference/read_wos_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Web of Science tab-delimited files — read_wos_tab","text":"","code":"read_wos_tab(file, normalized_names = TRUE)"},{"path":"https://roneyfraga.com/birddog/reference/read_wos_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Web of Science tab-delimited files — read_wos_tab","text":"file Character scalar vector. Path(s) WoS export file, single URL (http:// https://) pointing WoS export. normalized_names Logical. TRUE (default), use standardized column names possible; FALSE, keep original WoS field tags.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"Calculates Citation Cycle Time (CCT) - average citation cycle time - measure pace technological scientific progress publication network. Based Kayal (1999) methodology, indicator measures median age cited publications, lower values indicate faster technological replacement cycles.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"","code":"sniff_citations_cycle_time(   network,   scope = \"groups\",   start_year = NULL,   end_year = NULL,   tracked_cr_py = NULL )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"network Required. Network object containing publication data. scope = \"groups\": object returned sniff_groups(). scope = \"network\": network object (tbl_graph igraph). scope Analysis scope. Either \"groups\" (default) separate group analysis \"network\" complete network analysis. start_year, end_year Start end years temporal analysis. specified, uses minimum maximum years found data. tracked_cr_py Pre-processed citation year data (optional). provided, avoids recalculating step.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"list following components: data Tibble CCT data containing columns: group, year, index plots List ggplot2 plots showing temporal evolution CCT group years_range Vector start end years used analysis tracked_cr_py Complete citation year data used calculations","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"Citation Cycle Time (CCT) calculated : publication, calculate year difference publication references Calculate median differences publication Calculate mean medians group/network + 0.5 (Kayal adjustment) Lower CCT values indicate publications citing recent work, suggesting faster pace technological/scientific replacement.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"Kayal AA, Waters RC. empirical evaluation technology cycle time indicator measure pace technological progress superconductor technology. IEEE Transactions Engineering Management. 1999;46(2):127–31. doi:10.1109/17.759138","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/reference/sniff_citations_cycle_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Citation Cycle Time (CCT) indicator — sniff_citations_cycle_time","text":"","code":"if (FALSE) { # \\dontrun{ # Group analysis results <- sniff_citations_cycle_time(network_groups, scope = \"groups\")  # Network analysis results_network <- sniff_citations_cycle_time(complete_network, scope = \"network\")  # Accessing results cct_data <- results$data plots <- results$plots  # Specifying time period results_period <- sniff_citations_cycle_time(   network_groups,   start_year = 2010,   end_year = 2020 ) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and Analyze Network Components — sniff_components","title":"Identify and Analyze Network Components — sniff_components","text":"Detects connected components citation network computes summary statistics component. Returns component information updated network component labels.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and Analyze Network Components — sniff_components","text":"","code":"sniff_components(net)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and Analyze Network Components — sniff_components","text":"net network object (tbl_graph igraph) generated sniff_network()","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and Analyze Network Components — sniff_components","text":"list two elements: components tibble component statistics containing: component: Component identifier (e.g., \"component01\") quantity_publications: Number publications component average_age: Mean publication year component network input network added component labels","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify and Analyze Network Components — sniff_components","text":"","code":"if (FALSE) { # \\dontrun{ # Create a network first data <- read_wos(\"savedrecs.txt\") net <- sniff_network(data)  # Analyze components result <- sniff_components(net)  # Access component information result$components  # Get network with component labels component_net <- result$network } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"Computes entropy keyword distributions scientific publications specified time range. Entropy measures diversity uniformity keyword usage within research groups entire network.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"","code":"sniff_entropy(network, scope = \"groups\", start_year = NULL, end_year = NULL)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"network network object analyze. scope = \"groups\", output sniff_groups(). scope = \"network\", tbl_graph igraph object sniff_network(). scope Character specifying analysis scope: \"groups\" multiple groups \"network\" entire network (default: \"groups\"). start_year Starting year entropy calculation. NULL, uses minimum publication year found network data. end_year Ending year entropy calculation. NULL, uses maximum publication year found network data.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"list three components: data tibble containing entropy values group year plots list plotly objects visualizing entropy trends group years_range vector start_year end_year used calculations","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"function calculates normalized entropy based Shannon's information theory (Shannon, 1948). Entropy quantifies average level uncertainty keyword distributions measures randomness disorder within research groups. normalized entropy scale-independent measure uncertainty can used compare uncertainty different groups. calculated using formula: $$H = -\\frac{\\sum_{=1}^{n} p_i \\log_2 p_i}{n}$$ \\(p_i\\) probability keyword \\(\\) \\(n\\) number unique keywords. Entropy values range 0 1, : 0 indicates minimal diversity (dominant keywords, low uncertainty) 1 indicates maximal diversity (uniform keyword distribution, high uncertainty)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"Shannon, C. E. (1948). mathematical theory communication. Bell System Technical Journal, 27(3), 379-423. doi: https://doi.org/10.1002/j.1538-7305.1948.tb01338.x concept entropy measures randomness disorder group provides insights diversity research topics thematic concentration within scientific communities.","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/reference/sniff_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Entropy Based on Keywords Over Time — sniff_entropy","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate entropy for groups from sniff_groups() output groups_data <- sniff_groups(your_network_data) entropy_results <- sniff_entropy(groups_data, scope = \"groups\")  # Calculate entropy for entire network from sniff_network() output network_data <- sniff_network(your_network_data) entropy_results <- sniff_entropy(network_data, scope = \"network\")  # Specify custom year range entropy_results <- sniff_entropy(   groups_data,   scope = \"groups\",   start_year = 2010,   end_year = 2020 )  # Access results entropy_data <- entropy_results$data entropy_plots <- entropy_results$plots year_range <- entropy_results$years_range  # Interpret results: higher entropy indicates greater keyword diversity high_entropy_groups <- entropy_data %>%   group_by(group) %>%   summarise(mean_entropy = mean(index, na.rm = TRUE)) %>%   arrange(desc(mean_entropy)) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect and analyze groups in a scientific network — sniff_groups","title":"Detect and analyze groups in a scientific network — sniff_groups","text":"function identifies analyzes groups (communities) within scientific networks created articles patents data. can apply different clustering algorithms detect technological trajectories emerging scientific fields.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect and analyze groups in a scientific network — sniff_groups","text":"","code":"sniff_groups(   comps,   min_group_size = 10,   keep_component = c(\"component1\"),   cluster_component = c(\"component1\"),   algorithm = \"fast_greedy\",   groups_short_name = FALSE )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect and analyze groups in a scientific network — sniff_groups","text":"comps list containing network components, typically generated sniff_components(). Must include network object 'component' 'PY' (publication year) vertex attributes. min_group_size Minimum size group included results (default = 10). Groups fewer members filtered . keep_component Character vector specifying network components process (default = \"component1\"). Can include multiple components. cluster_component Character vector specifying components clustered (default = \"component1\"). Components listed treated single groups. algorithm Community detection algorithm use (default = \"fast_greedy\"). Options include: \"louvain\", \"walktrap\", \"edge_betweenness\", \"fast_greedy\", \"leiden\". groups_short_name Logical indicating whether use short group names (default = FALSE). TRUE, removes component prefixes group names.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect and analyze groups in a scientific network — sniff_groups","text":"list three elements: aggregate: data frame group statistics including group name, number papers, average publication year network: input network added group attributes pubs_by_year: Publication counts group year","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect and analyze groups in a scientific network — sniff_groups","text":"function first validates input network, applies specified clustering algorithm detect communities within network. calculates statistics detected group returns results along augmented network. function can handle multiple network components simultaneously, applying clustering specified components.","code":""},{"path":[]},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect and analyze groups in a scientific network — sniff_groups","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'comps' is output from sniff_components() groups <- sniff_groups(comps,   min_group_size = 15,   algorithm = \"leiden\",   groups_short_name = TRUE )  # Access group statistics groups$aggregate groups$network groups$pubs_by_year } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","title":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","text":"function analyzes publication growth rates attributes research groups identified scientific networks. calculates growth rates using exponential models, creates horizon plots visualization, generates summary tables.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","text":"","code":"sniff_groups_attributes(   groups,   growth_rate_period = 2010:2022,   horizon_plot = TRUE,   show_results = TRUE,   assign_result = NULL )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","text":"groups list containing network data publications year group information. Must include elements: network, pubs_by_year, aggregate. growth_rate_period Numeric vector years use growth rate calculation (default: 2010:2024). horizon_plot Logical indicating whether include horizon plots output table (default: TRUE). show_results Logical indicating whether print results console (default: TRUE). assign_result Character string specifying variable name assign results global environment (default: NULL).","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","text":"list two components: attributes_table: gt table showing group attributes including growth rates regression: list model summaries group's growth rate calculation","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","text":"function performs following steps: Calculates growth rates using exponential models group Processes publication age doubling time metrics Optionally creates horizon plots group's publication trend Generates comprehensive summary table","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Group Attributes from Scientific Networks — sniff_groups_attributes","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming groups is output from sniff_groups() groups_attributes <- sniff_groups_attributes(groups,   growth_rate_period = 2010:2022,   horizon_plot = TRUE )  # View the results table print(groups_attributes$attributes_table)  # Access model summaries groups_attributes$regression } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Cumulative Network Groups Over Time — sniff_groups_cumulative","title":"Analyze Cumulative Network Groups Over Time — sniff_groups_cumulative","text":"Performs cumulative community detection network specified time spans, returning group statistics keyword analysis time period.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Cumulative Network Groups Over Time — sniff_groups_cumulative","text":"","code":"sniff_groups_cumulative(   groups,   time_span = 2000:2024,   min_group_size = 10,   top_n_keywords = 10,   algorithm = \"fast_greedy\" )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Cumulative Network Groups Over Time — sniff_groups_cumulative","text":"groups list created sniff_groups() containing least network (tbl_graph igraph object whose vertices attributes PY, component, DE), well auxiliary elements pubs_by_year aggregate. time_span Numeric vector years analyze (default: 2000:2024). min_group_size Minimum size cluster retained (default = 10). top_n_keywords Number top keywords extract per group (default = 10). algorithm Community detection algorithm use. One : \"louvain\", \"walktrap\", \"edge_betweenness\", \"fast_greedy\" (default), \"leiden\".","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Cumulative Network Groups Over Time — sniff_groups_cumulative","text":"named list (year) element contains: groups tibble group statistics top keywords documents tibble mapping documents groups network cumulative network year","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Cumulative Network Groups Over Time — sniff_groups_cumulative","text":"","code":"if (FALSE) { # \\dontrun{ # Typical pipeline: data  <- read_wos(\"savedrecs.txt\") net   <- sniff_network(data) comps <- sniff_components(net) groups <- sniff_groups(comps)  # Cumulative analysis groups_cumulative <- sniff_groups_cumulative(   groups,   time_span = 2010:2020,   algorithm = \"leiden\" )  # Access results for 2015 groups_cumulative[[\"network_until_2015\"]]$groups } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract attributes from cumulative groups — sniff_groups_cumulative_attributes","title":"Extract attributes from cumulative groups — sniff_groups_cumulative_attributes","text":"Extract attributes cumulative groups","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract attributes from cumulative groups — sniff_groups_cumulative_attributes","text":"","code":"sniff_groups_cumulative_attributes(   cummulative_network,   min_group_size = 10,   top_n_keywords = 3,   group_to_track = \"component1_g01\",   attributes = \"groups\" )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_citations.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","title":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","text":"function calculates cumulative citations papers within research groups, tracking citations accumulate time highly cited papers.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_citations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","text":"","code":"sniff_groups_cumulative_citations(groups, min_citations = 5)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_citations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","text":"groups list containing network data following components: network: tidygraph network object pubs_by_year: Publication counts year aggregate: Aggregate network statistics min_citations Minimum number citations paper included analysis (default: 10).","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_citations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","text":"named list (research group) element contains tibble : group: Research group identifier SR: Paper identifier TC: Total citations PY: Publication year Ki: Total network citations citations_by_year: tibble annual citation counts (PY: year, citations: count) growth_power: Growth power score (0-100) growth_consistency: Percentage years citations peak_momentum: Highest 3-year rolling average citation count early_impact: Citations first 5 years recent_momentum: Citations last 3 years acceleration_factor: Ratio late early citations","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_citations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","text":"research group, function: Identifies papers citations threshold Tracks citations papers year year Calculates cumulative citation patterns Computes various growth metrics citation analysis Works Web Science (WOS) OpenAlex data formats.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_cumulative_citations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cumulative Citations by Group and Year — sniff_groups_cumulative_citations","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming groups is output from sniff_groups() # Calculate cumulative citations groups_cumulative_citations <- sniff_groups_cumulative_citations(groups, min_citations = 5) # View results for first group head(groups_cumulative_citations[[1]]) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_hubs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Hub Papers in Research Groups — sniff_groups_hubs","title":"Identify Hub Papers in Research Groups — sniff_groups_hubs","text":"function analyzes citation networks identify hub papers within research groups based citation patterns. calculates several metrics (Zi, Pi) classify papers different hub categories.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_hubs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Hub Papers in Research Groups — sniff_groups_hubs","text":"","code":"sniff_groups_hubs(groups, min_citations = 1)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_hubs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Hub Papers in Research Groups — sniff_groups_hubs","text":"groups list containing network data following components: network: tidygraph network object pubs_by_year: Publication counts year aggregate: Aggregate network statistics min_citations Minimum number citations paper considered (default: 1)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_hubs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Hub Papers in Research Groups — sniff_groups_hubs","text":"tibble containing: group: Research group identifier SR: Paper identifier TC: Total citations Ki: Total citations groups ki: Citations within group Zi: Standardized within-group citation score Pi: Citation diversity index zone: Hub classification (\"noHub\", \"R5\", \"R6\", \"R7\")","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_hubs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Hub Papers in Research Groups — sniff_groups_hubs","text":"function classifies papers hub categories based : R5: Knowledge hubs (Zi ≥ 2.5 Pi ≤ 0.3) R6: Bridging hubs (Zi ≥ 2.5 0.3 < Pi ≤ 0.75) R7: Boundary-spanning hubs (Zi ≥ 2.5 Pi > 0.75)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_hubs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Hub Papers in Research Groups — sniff_groups_hubs","text":"","code":"if (FALSE) { # \\dontrun{  # Assuming 'groups' is output from sniff_groups()  # Identify hub papers hubs <- sniff_groups_hubs(groups, min_citations = 5)  # View results head(hubs) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_keywords.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract representative keywords from grouped nodes — sniff_groups_keywords","title":"Extract representative keywords from grouped nodes — sniff_groups_keywords","text":"function processes nodes grouped network (typically community detection), extracts frequent distinctive keywords (using TF-IDF) descriptor field keywords subject terms.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_keywords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract representative keywords from grouped nodes — sniff_groups_keywords","text":"","code":"sniff_groups_keywords(net_groups, n_terms = 15, min_freq = 1, sep = \";\")"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_keywords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract representative keywords from grouped nodes — sniff_groups_keywords","text":"net_groups list containing network component class tbl_graph, node least two attributes: group DE. n_terms Integer. number top terms return per group, frequency TF-IDF. Default 15. min_freq Integer. Minimum frequency term must group considered. Default 2. sep Character. Separator used DE field split multiple terms. Default \";\".","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_keywords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract representative keywords from grouped nodes — sniff_groups_keywords","text":"tibble one row per group, containing two columns: term_freq: frequent terms (raw frequency). term_tfidf: distinctive terms (TF-IDF scores).","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_keywords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract representative keywords from grouped nodes — sniff_groups_keywords","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'groups' is output from sniff_groups() groups_keywords <- sniff_groups_keywords(groups) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Text Data and Analyze Topic Models — sniff_groups_stm_prepare","title":"Prepare Text Data and Analyze Topic Models — sniff_groups_stm_prepare","text":"Processes text data structural topic modeling performs topic number selection analysis, returning processed data diagnostic plots.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Text Data and Analyze Topic Models — sniff_groups_stm_prepare","text":"","code":"sniff_groups_stm_prepare(   groups,   group_to_stm = \"g01\",   search_topics = c(5:40, 45, 50, 55, 60),   seed = 1234,   cores = 1 )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Text Data and Analyze Topic Models — sniff_groups_stm_prepare","text":"groups list containing network data 'network' component group_to_stm Character string specifying research group process (default: 'g01') search_topics Numeric vector topic numbers evaluate (default: c(5:40, 45, 50, 55, 60)) seed Random seed reproducibility (default: 1234) cores Number CPU cores use (default: 1)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Text Data and Analyze Topic Models — sniff_groups_stm_prepare","text":"list containing: result: searchK results object plots: list containing two ggplot objects (p1: metrics K, p2: exclusivity vs coherence) df_prep: Output stm::textProcessor df_doc: Output stm::prepDocuments df: Original filtered data","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_prepare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Text Data and Analyze Topic Models — sniff_groups_stm_prepare","text":"","code":"if (FALSE) { # \\dontrun{ output <- sniff_groups_stm_prepare(network_data) output$plots$p1 # View first plot output$result # Access search results } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","title":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","text":"Performs structural topic modeling prepared text data returns topic proportions top documents topic.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","text":"","code":"sniff_groups_stm_run(groups_stm_prepare, k_topics = 12, n_top_documents = 50)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","text":"groups_stm_prepare prepared STM object sniff_groups_stm_prepare() k_topics Number topics model (default: 12) n_top_documents Number top documents topic (default: 50)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","text":"list containing: topic_proportion2: Data frame topic proportions top terms tab_top_documents: Data frame top documents topic","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","text":"function: Fits STM model specified number topics Identifies top terms topic Calculates topic proportions Identifies top documents topic","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_stm_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Structural Topic Modeling Analysis — sniff_groups_stm_run","text":"","code":"if (FALSE) { # \\dontrun{ # Prepare data first stm_data <- sniff_groups_stm_prepare(network_data)  # Run topic modeling stm_results <- sniff_groups_stm_run(stm_data, k_topics = 15)  # Access results stm_results$topic_proportion2  # Topic proportions and terms stm_results$tab_top_documents  # Top documents per topic } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","title":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","text":"Identifies extracts key terms titles abstracts publications within different research groups using natural language processing techniques, computes term statistics including TF-IDF scores.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","text":"","code":"sniff_groups_terms(   net_groups,   algorithm = \"rake\",   phrase_pattern = \"(A|N)*N(P+D*(A|N)*N)*\",   n_cores = 1,   show_progress = TRUE,   n_terms = 15,   min_freq = 2,   digits = 4 )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","text":"net_groups list containing network data publication information. Must include elements: network (vertex attributes 'group', 'TI', 'AB'), pubs_by_year, aggregate. algorithm Term extraction algorithm use. Options : \"rake\" - Rapid Automatic Keyword Extraction (default) \"pointwise\" - Pointwise Mutual Information \"phrase\" - Phrase pattern matching phrase_pattern Regular expression pattern phrase extraction algorithm = \"phrase\" (default: \"(|N)N(P+D(|N)N)\") n_cores Number CPU cores use parallel processing (default: 1) show_progress Logical indicating whether show progress bar (default: TRUE) n_terms Number top terms return summary table (default: 15) min_freq Minimum frequency threshold terms (default: 2) digits Number decimal places round numerical values (default: 4)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","text":"list two components: terms_by_group: named list (group) data frames containing extracted terms statistics terms_table: summary tibble top terms frequency TF-IDF group","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","text":"function performs following steps: Validates input structure parameters Loads UDPipe language model package extdata Processes text data (titles abstracts) group Applies selected term extraction algorithm (RAKE, PMI, phrase patterns) Computes term frequencies TF-IDF scores Returns ranked terms research group comprehensive statistics function uses UDPipe tokenization, lemmatization POS tagging term extraction. phrase extraction, default pattern finds noun phrases.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Analyze Key Terms from Research Groups — sniff_groups_terms","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming groups is output from sniff_groups() terms <- sniff_groups_terms(groups, algorithm = \"rake\")  # View terms for first group head(terms$terms_by_group[[1]])  # View summary table print(terms$terms_table)  # Customized extraction net_groups_terms <- sniff_groups_terms(net_groups,   algorithm = \"phrase\",   n_terms = 10,   min_freq = 3,   n_cores = 4 ) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Technological Trajectories from Grouped Documents — sniff_groups_trajectories","title":"Detect Technological Trajectories from Grouped Documents — sniff_groups_trajectories","text":"function analyzes evolution document groups time detect technological trajectories scientific emergence patterns. computes similarity measures groups across time periods tracks attributes.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Technological Trajectories from Grouped Documents — sniff_groups_trajectories","text":"","code":"sniff_groups_trajectories(   groups_cumulative,   min_group_size = 10,   top_n_keywords = 3 )"},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Technological Trajectories from Grouped Documents — sniff_groups_trajectories","text":"groups_cumulative list cumulative group data time, typically produced functions birddog package. element contain network, documents, groups data. min_group_size Minimum number documents required group considered (default: 10). Smaller groups filtered . top_n_keywords Number top keywords consider analyzing group characteristics (default: 3).","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Technological Trajectories from Grouped Documents — sniff_groups_trajectories","text":"list two components: groups_attributes: list data frames containing attributes tracked group groups_similarity: list data frames containing Jaccard similarity measures groups across time periods","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_groups_trajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Technological Trajectories from Grouped Documents — sniff_groups_trajectories","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have cumulative group data: trajectories <- sniff_groups_trajectories(groups_cumulative, min_group_size = 15) } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Key Routes in Citation Networks — sniff_key_route","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"function identifies visualizes key citation routes within scientific networks analyzing significant citation paths publications. algorithm based main path analysis approach described : Liu JS, Lu LYY. integrated approach main path analysis: Development Hirsch index example. Journal American Society Information Science Technology. 2012;63(3):528-542. https://doi.org/10.1002/asi.21692","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"","code":"sniff_key_route(network, scope = \"network\", citations_percentage = 1)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"network network object class tbl_graph igraph containing citation data, list object generated sniff_groups() scope = \"groups\" scope Character string specifying analysis scope. Must either \"network\" (full network analysis) \"groups\" (group-wise analysis grouped network) citations_percentage Numeric value 0 1 indicating percentage top-cited edges consider key route identification. Default 1 (edges)","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"list containing group: plot - ggplot2 object visualizing key citation route data - tibble publication details (name, TI, AU, PY) nodes key route","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"function performs following steps based main path analysis methodology: Converts citation network line graph edges become nodes Filters edges based citation percentage threshold Identifies largest connected component Calculates simple paths source sink nodes Determines main citation route using forward backward propagation Extracts visualizes key citation path algorithm implements integrated approach main path analysis described Liu & Lu (2012), combines structural analysis citation metrics identify significant knowledge diffusion paths scientific literature.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"Liu JS, Lu LYY. integrated approach main path analysis: Development Hirsch index example. Journal American Society Information Science Technology. 2012;63(3):528-542. https://doi.org/10.1002/asi.21692","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_key_route.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Key Routes in Citation Networks — sniff_key_route","text":"","code":"if (FALSE) { # \\dontrun{ # Load required packages library(igraph) library(tidygraph) library(ggraph)  # Example with network scope result <- sniff_key_route(my_network, scope = \"network\", citations_percentage = 0.8)  # Example with groups scope grouped_network <- sniff_groups(data) result <- sniff_key_route(grouped_network, scope = \"groups\")  # Access results for a specific group result$group_name$plot result$group_name$data } # }"},{"path":"https://roneyfraga.com/birddog/reference/sniff_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Citation Networks from Bibliographic Data — sniff_network","title":"Create Citation Networks from Bibliographic Data — sniff_network","text":"Constructs different types citation networks bibliographic data imported Web Science OpenAlex using birddog's reading functions.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Citation Networks from Bibliographic Data — sniff_network","text":"","code":"sniff_network(dataframe, type = \"direct citation\", external_references = FALSE)"},{"path":"https://roneyfraga.com/birddog/reference/sniff_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Citation Networks from Bibliographic Data — sniff_network","text":"dataframe data frame imported via read_openalex() read_wos() type Type network create. One : \"direct citation\": Direct citation links documents \"bibliographic coupling\": Documents linked shared references external_references Logical indicating whether include external references (references original dataset) nodes network","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Citation Networks from Bibliographic Data — sniff_network","text":"tbl_graph object tidygraph package representing citation network. Node attributes include bibliographic information input data.","code":""},{"path":"https://roneyfraga.com/birddog/reference/sniff_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Citation Networks from Bibliographic Data — sniff_network","text":"","code":"if (FALSE) { # \\dontrun{ # Using OpenAlex data oa_data <- read_openalex(\"works.csv\", format = \"csv\") net <- sniff_network(oa_data, type = \"direct citation\")  # Using WoS data wos_data <- read_wos(\"savedrecs.txt\") net <- sniff_network(wos_data, type = \"bibliographic coupling\", external_references = TRUE) } # }"},{"path":"https://roneyfraga.com/birddog/reference/split_wos_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Split WOS plain text into individual records — split_wos_records","title":"Split WOS plain text into individual records — split_wos_records","text":"Split WOS plain text individual records","code":""},{"path":"https://roneyfraga.com/birddog/reference/split_wos_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split WOS plain text into individual records — split_wos_records","text":"","code":"split_wos_records(lines)"},{"path":"https://roneyfraga.com/birddog/reference/track_publications_year_from_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Track Publication Years from References — track_publications_year_from_references","title":"Track Publication Years from References — track_publications_year_from_references","text":"Processes citation data network objects extract fetch publication years cited references. Handles Web Science OpenAlex data sources automatically.","code":""},{"path":"https://roneyfraga.com/birddog/reference/track_publications_year_from_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track Publication Years from References — track_publications_year_from_references","text":"","code":"track_publications_year_from_references(   network,   cr_column = \"CR\",   py_column = \"PY\" )"},{"path":"https://roneyfraga.com/birddog/reference/track_publications_year_from_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track Publication Years from References — track_publications_year_from_references","text":"network tbl_graph object tidygraph containing network data cr_column Name column containing citation references (default: \"CR\") py_column Name column containing publication years (default: \"PY\")","code":""},{"path":"https://roneyfraga.com/birddog/reference/track_publications_year_from_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Track Publication Years from References — track_publications_year_from_references","text":"tbl_graph object added CR_PY column containing publication years cited references, separated pipes (\"|\") multiple references","code":""},{"path":"https://roneyfraga.com/birddog/reference/track_publications_year_from_references.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Track Publication Years from References — track_publications_year_from_references","text":"","code":"if (FALSE) { # \\dontrun{ # Process Web of Science network data network_with_years <- track_publications_year_from_references(network_wos)  # Process OpenAlex network data network_with_years <- track_publications_year_from_references(network_oa)  # Specify custom column names network_with_years <- track_publications_year_from_references(   network,    cr_column = \"references\",    py_column = \"year\" ) } # }"},{"path":"https://roneyfraga.com/birddog/news/index.html","id":"birddog-development-version","dir":"Changelog","previous_headings":"","what":"birddog (development version)","title":"birddog (development version)","text":"Initial CRAN submission.","code":""}]
